{
	"extends": [
		"eslint:recommended",
		"plugin:react/recommended",
		"plugin:jsx-a11y/recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:import/typescript",
		"plugin:react/jsx-runtime",
		"plugin:prettier/recommended",
		"prettier"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaFeatures": {
			"jsx": true
		},
		"ecmaVersion": "latest",
		"sourceType": "module"
	},
	"plugins": ["react", "@typescript-eslint", "import", "jsx-a11y", "react-hooks", "prettier"],
	"rules": {
		"@typescript-eslint/no-explicit-any": "off",
		"@typescript-eslint/no-non-null-assertion": "off",
		"@typescript-eslint/no-unused-vars": [
			"warn",
			{
				"argsIgnorePattern": "^_",
				"varsIgnorePattern": "^_",
				"caughtErrorsIgnorePattern": "^_"
			}
		],
		"react-hooks/rules-of-hooks": "error",
		"react-hooks/exhaustive-deps": "warn",
		"prettier/prettier": [
			"warn",
			{
				"endOfLine": "auto",
				"singleQuote": true
			}
		]
	},
	"settings": {
		"react": {
			"createClass": "createReactClass", // Regex for Component Factory to use,
			// default to "createReactClass"
			"pragma": "React", // Pragma to use, default to "React"
			"fragment": "Fragment", // Fragment to use (may be a property of <pragma>), default to "Fragment"
			"version": "detect", // React version. "detect" automatically picks the version you have installed.
			// You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
			// It will default to "latest" and warn if missing, and to "detect" in the future
			"flowVersion": "0.53" // Flow version
		},
		"propWrapperFunctions": [
			// The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.
			"forbidExtraProps",
			{ "property": "freeze", "object": "Object" },
			{ "property": "myFavoriteWrapper" },
			// for rules that check exact prop wrappers
			{ "property": "forbidExtraProps", "exact": true }
		],
		"componentWrapperFunctions": [
			// The name of any function used to wrap components, e.g. Mobx `observer` function. If this isn't set, components wrapped by these functions will be skipped.
			"observer", // `property`
			{ "property": "styled" }, // `object` is optional
			{ "property": "observer", "object": "Mobx" },
			{ "property": "observer", "object": "<pragma>" } // sets `object` to whatever value `settings.react.pragma` is set to
		],
		"formComponents": [
			// Components used as alternatives to <form> for forms, eg. <Form endpoint={ url } />
			"CustomForm",
			{ "name": "Form", "formAttribute": "endpoint" }
		],
		"linkComponents": [
			// Components used as alternatives to <a> for linking, eg. <Link to={ url } />
			"Hyperlink",
			{ "name": "Link", "linkAttribute": "to" }
		]
	},
	"env": {
		"browser": true,
		"amd": true,
		"node": true
	}
}
